#+title: Davemacs
#+author: Dave C.

* Introduction

  If I had a nickel for every useless commit message that I used to do
  back in school, I could probably retire early on a yacht.
  But as I don't get paid for shoddy commit messages, I figured I
  ought to document my choices early and coherently.
  In other words, a literate configuration is the new direction.

  Before one can make a program from scratch, you must first
  ~git clone~ the universe.

  #+begin_src shell
    git clone git@github.com:dchesser/.emacs.d.git
  #+end_src

  To modify the source-code, use ~C-c '~ (control-C, then apostrophe)
  in the code blocks.
  Without further ado...

* Me

  #+begin_src emacs-lisp
       (setq user-full-name "Dave Chesser"
             user-mail-address "dave@dchesser.website")
  #+end_src
  
  So the name's Dave. Hi.
  I'm a programmer by trade, so [[https://gnu.org/s/emacs/][GNU Emacs]] was a logical choice in tooling.

  - It's been around for decades, so it's no passing fad.
  - It's popular, so there's almost a package for /everything/.
  - It's scripted via [[https://www.gnu.org/software/emacs/manual/html_node/eintr/][Emacs Lisp]], its dialect of [[https://en.wikipedia.org/wiki/Lisp_(programming_language)][Lisp]], to serve as
    its own computing environment as well as a method of extending
    its capabilities.

* Customizations

  ~M-x customize-group <RET> D <RET>~ for more details.

** Fonts

*** ~D-preferred-fonts-list~

    List of font names to prefer when opening a frame.
    If none of the fonts are available, the default
    will be "Monospace".

*** ~D-preferred-font-size~

    The chosen font size for the font chosen in
    ~D-preferred-fonts-list~.

* Preparation

  #+begin_src emacs-lisp
    (unbind-key "C-z")
  #+end_src

* Packages

  #+begin_src emacs-lisp
    (require 'package)

    (when (version< emacs-version "27")
      (package-initialize))
  #+end_src

  While Emacs does come with a lot out of the box, it's not remotely
  useful without the extra packages others have written and released.

  #+begin_src emacs-lisp
    (dolist (repo '(("melpa" . "https://melpa.org/packages/")))
      (add-to-list 'package-archives repo :append))
  #+end_src

** ~use-package~

  #+begin_src emacs-lisp
    (unless (require 'use-package nil :no-error)
      (package-refresh-contents)
      (package-install 'use-package))

    (setq use-package-always-ensure t)
  #+end_src

  [[https://jwiegley.github.io/use-package/][~use-package~]] is a macro to make package-loading a cleaner process
  than a list of ~require~ calls and configuration.
  Any further package will be using this to configure itself.

** Magit

  #+begin_src emacs-lisp
    (use-package magit
      :bind ("<f12>" . magit-status))
  #+end_src

  [[https://magit.vc/][Magit]] is an interactive Git front-end to [[https://git-scm.com/][Git]].
  No more memorizing all the different command flags just to manage my
  code commitments; slap a few keys and you're good to go.

  To pull up the Git status for a buffer, press ~F12~.
